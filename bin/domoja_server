#!/bin/sh

cd `dirname $0`/..

if [ "$(which authbind)" = "" ]
then
	echo 'ERROR: Please install authbind.' >&2
	exit 1
fi

if [ "$(which pm2)" = "" ]
then
	echo 'ERROR: Please install pm2.' >&2
	exit 1
fi

if [ "$1" = "--install" ]
then
	echo pm2 start --interpreter sh $0
	pm2 -s delete `basename $0`
	pm2 -s start --interpreter sh $0
	pm2 -s save
	pm2 list
	exit 0
fi

debug=false
devMode=false
while [ "$1" != "" ]
do
case "$1" in
	"--dev")
		devMode=true
		shift
		;;
	"-d")
		debug=true
		shift
		;;
	"-h"|"--help")
		echo "Usage: `basename $0` [--install | [-h | --help]  [-d] [--dev] ]" >&2
		echo "  --install  : installs domoja with pm2" >&2
		echo "  -h | --help: this usage help" >&2
		echo "  -d         : run in debug mode" >&2
		echo "  --dev      : run in dev mode" >&2
		exit 2 
		shift
		;;
esac
done



# check that mongodb is running
if [ "`sudo systemctl status mongodb | grep 'active (running)'`" != "" ]
then
    echo MongoDB is running OK.
else
    echo Repairing MongoDB...
    if sudo -u mongodb /usr/bin/mongod --repair --dbpath=/var/lib/mongodb
    then
	echo Restarting MongoDB...
	sudo systemctl force-reload mongodb
	sudo systemctl restart mongodb
    else
	echo 'ERROR: Repair failed. Trying to restart mongodb anyway...'
	sudo systemctl restart mongodb
    fi
fi 2>&1 | sudo tee -a /var/log/domo_app/domo_app.log

set_mixer ()
{
    cardname=$1
    control=$2
    value=$3
    
    # find the card
    c=-1
    ret=0
    res=''
    while [ "$res" = '' -a $ret = 0 ] 
    do
	c=$(expr $c + 1)
	amixer -c $c > /dev/null 2>&1
	ret=$?
	res=`amixer -c $c | grep "'$cardname'"`
    done
    if [ "$res" != '' ]
    then
	# find control
	numid=`amixer -c $c controls | awk -F, "/name='$control'/"' { print $1}'`
	amixer -c $c cset $numid $value
    else
	echo "Card '$cardname' not found." >&2
    fi
}

# set the sound card to 3.5 mm jack
set_mixer 'PCM' 'PCM Playback Route' 1
set_mixer 'PCM' 'PCM Playback Volume' 100%
set_mixer 'PCM' 'PCM Playback Switch' 1

#amixer -c $c cset numid=3 1
#amixer -c $c cset numid=1 400

sudo touch /etc/authbind/byport/443
sudo chmod 777 /etc/authbind/byport/443
sudo touch /etc/authbind/byport/80
sudo chmod 777 /etc/authbind/byport/80

options=
if $devMode
then
	options="$options --dev"
fi

main=$(awk -F\" '$2 == "main" { print $4}' package.json)

case "$main" in 
domoja.ts)
	if $debug
	then
#		PORT=443 exec authbind --deep node --inspect=0.0.0.0 --require ts-node/register --require tsconfig-paths/register domoja.ts ./config
		PORT=443 exec authbind --deep nodemon --ext ts --watch . --ignore node_modules,www --exec node --inspect=0.0.0.0 --require ts-node/register domoja.ts ./config $options
	else
		PORT=443 TS_NODE_TRANSPILE_ONLY=true TS_NODE_COMPILER=typescript-cached-transpile exec authbind --deep ts-node domoja.ts ./config $options
	fi
	;;
*domoja.js)
	PORT=443 exec authbind --deep node dist/domoja.js ./config $options
	;;
esac
